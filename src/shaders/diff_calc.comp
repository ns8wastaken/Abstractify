#version 430

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout(rgba8, binding = 0) readonly uniform image2D image1;
layout(rgba8, binding = 1) readonly uniform image2D image2;

// Output buffer for the computed difference
layout(std430, binding = 2) buffer OutputBuffer {
    uint result;
};

uniform ivec2 resolution; // Image resolution

void main() {
    ivec2 coords = ivec2(gl_GlobalInvocationID.xy);

    if (coords.x >= resolution.x || coords.y >= resolution.y) return;

    // Read pixels from both images
    vec4 color1 = imageLoad(image1, coords);
    vec4 color2 = imageLoad(image2, coords);

    // Compute the pixel difference
    vec4 diff = abs(color1 - color2);
    uint pixelDiff = uint(sqrt(dot(diff, diff) / 4.0) * 255.0);

    // Atomic addition to accumulate the result
    atomicAdd(result, pixelDiff);
}
